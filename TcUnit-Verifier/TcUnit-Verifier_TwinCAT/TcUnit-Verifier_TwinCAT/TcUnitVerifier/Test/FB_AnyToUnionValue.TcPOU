<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_AnyToUnionValue" Id="{0cc46357-158c-41b7-afc0-2c79ec82f0f6}" SpecialFunc="None">
    <Declaration><![CDATA[(*
    Tests the free function F_AnyToUnionValue.
*)
FUNCTION_BLOCK FB_AnyToUnionValue EXTENDS TcUnit.FB_TestSuite
VAR
    aBit : BIT := 1; // Only structures and function blocks can have BIT defined
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[Test_BOOL();
Test_BIT();
Test_BYTE();
Test_WORD();
Test_DWORD();
Test_LWORD();
Test_SINT();
Test_INT();
Test_DINT();
Test_LINT();
Test_USINT();
Test_UINT();
Test_UDINT();
Test_ULINT();
Test_REAL();
Test_LREAL();
Test_STRING();
Test_STRING_2();
Test_WSTRING();
Test_TIME();
Test_DATE();
Test_DATE_AND_TIME();
Test_TIME_OF_DAY();
Test_LTIME();]]></ST>
    </Implementation>
    <Method Name="Test_BIT" Id="{2bab70c5-093e-48a7-94e6-ae7f2bb2e7b3}">
      <Declaration><![CDATA[METHOD PRIVATE Test_BIT
VAR
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_BIT');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(aBit), AnyTypeClass := IBaseLibrary.TYPE_BIT, AnyValue := ADR(aBit));

AssertEquals(Expected := aBit,
             Actual := result.bitExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_BOOL" Id="{48f55beb-9fc1-4336-8784-72fc7eda80de}">
      <Declaration><![CDATA[METHOD PRIVATE Test_BOOL
VAR
    a : BOOL := TRUE;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_BOOL');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_BOOL, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.boolExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_BYTE" Id="{226781dc-3660-487a-bcbd-00cc36750e0e}">
      <Declaration><![CDATA[METHOD PRIVATE Test_BYTE
VAR
    a : BYTE := 16#8A;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_BYTE');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_BYTE, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.byteExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_DATE" Id="{84a5fde1-b357-4804-bf01-5c83bfeb54b3}">
      <Declaration><![CDATA[METHOD PRIVATE Test_DATE
VAR
    a : DATE := D#2106-02-05;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_DATE');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_DATE, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.dateExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_DATE_AND_TIME" Id="{76b46507-8743-481c-8853-3b45d1544ad5}">
      <Declaration><![CDATA[METHOD PRIVATE Test_DATE_AND_TIME
VAR
    a : DATE_AND_TIME := DT#2106-02-06-06:28:15;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_DATE_AND_TIME');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_DATEANDTIME, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.dateandtimeExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_DINT" Id="{c81a9536-5ff4-4424-9f7e-1d8c5133b5e3}">
      <Declaration><![CDATA[METHOD PRIVATE Test_DINT
VAR
    a : DINT := 143251;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_DINT');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_DINT, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.dintExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_DWORD" Id="{e6dfcf37-a491-45b2-9543-b7fdd8847283}">
      <Declaration><![CDATA[METHOD PRIVATE Test_DWORD
VAR
    a : DWORD := 16#3456CDEF;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_DWORD');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_DWORD, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.dwordExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_INT" Id="{77ff5bf1-1822-4366-a4ee-34a185c0d47e}">
      <Declaration><![CDATA[METHOD PRIVATE Test_INT
VAR
    a : INT := -32000;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_INT');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_INT, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.intExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_LINT" Id="{d2a7cc80-d43e-4823-a346-11defa0d180f}">
      <Declaration><![CDATA[METHOD PRIVATE Test_LINT
VAR
    a : LINT := -31243145;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_LINT');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_LINT, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.lintExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_LREAL" Id="{af2fee48-9d46-49ec-9fe0-6a046d6c2f7d}">
      <Declaration><![CDATA[METHOD PRIVATE Test_LREAL
VAR
    a : LREAL := 43123923124.745423;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_LREAL');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_LREAL, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.lrealExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_LTIME" Id="{1affac86-d501-40a0-99f5-4eeb9cd389fd}">
      <Declaration><![CDATA[METHOD PRIVATE Test_LTIME
VAR
    a : LTIME := LTIME#213502D23H34M33S709MS551US615NS;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_LTIME');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_LTIME, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.ltimeExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_LWORD" Id="{f0464dd4-9a3f-4fed-bf6c-84c05edc34ab}">
      <Declaration><![CDATA[METHOD PRIVATE Test_LWORD
VAR
    a : LWORD := 16#456CDEF987654321;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_LWORD');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_LWORD, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.lwordExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_REAL" Id="{5ff5264d-4661-4dc4-8889-01d457341535}">
      <Declaration><![CDATA[METHOD PRIVATE Test_REAL
VAR
    a : REAL := 431239.423;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_REAL');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_REAL, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.realExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_SINT" Id="{fd59d157-95aa-462e-812a-26f74d790e8c}">
      <Declaration><![CDATA[METHOD PRIVATE Test_SINT
VAR
    a : SINT := 100;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_SINT');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_SINT, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.sintExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_STRING" Id="{825e7694-a502-4c32-9d34-807560d3aa4c}">
      <Declaration><![CDATA[METHOD PRIVATE Test_STRING
VAR
    a : STRING := 'This is a random string';
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_STRING');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_STRING, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.stringExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_STRING_2" Id="{1e075eec-d55a-483a-976e-656d4a8d5ac3}">
      <Declaration><![CDATA[METHOD PRIVATE Test_STRING_2
VAR
    a : T_MaxString := '8YNn5KOmPC4dAcpOBdLWnw4WkN126EwXsj65xeurG48gWBepinNaOIKeCVMtWNBSxQWPdtUYiAusDkjMLtQhDtiWbwvmoKcFwiUGDd7pOe0fd52J7hK60oaYAX6VWWmceLJX8utaDVrVzCGXafeZLeHl6jj5enfjg4tfb2WMEBdsBuG2iDKwzwhBLCPqXDnhe5HbemIbtZT7p62OEj2oDqiIYDD6tZdlhBCCelDBx6dbIp32wFm0TpRKsTiwkZ6'; // 255 characters
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_STRING_2');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_STRING, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.stringExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_TIME" Id="{e7b3c2aa-6660-47ce-9edf-58924221789c}">
      <Declaration><![CDATA[METHOD PRIVATE Test_TIME
VAR
    a : TIME := T#15M20S;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_TIME');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_TIME, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.timeExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_TIME_OF_DAY" Id="{55ccbe56-fcd0-4e7f-8497-d0c19c60ad6a}">
      <Declaration><![CDATA[METHOD PRIVATE Test_TIME_OF_DAY
VAR
    a : TIME_OF_DAY := TOD#15:36:30.123;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_TIME_OF_DAY');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_TIMEOFDAY, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.timeofdayExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_UDINT" Id="{2ae444f0-9149-4c01-b7ad-2fdcab7bba7c}">
      <Declaration><![CDATA[METHOD PRIVATE Test_UDINT
VAR
    a : UDINT := 2555;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_UDINT');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_UDINT, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.udintExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_UINT" Id="{3309739e-f1a1-45d7-928b-c636d1592c1c}">
      <Declaration><![CDATA[METHOD PRIVATE Test_UINT
VAR
    a : UINT := 34523;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_UINT');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_UINT, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.uintExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_ULINT" Id="{5e5e97df-5e62-40a2-b054-3ba7c91cef70}">
      <Declaration><![CDATA[METHOD PRIVATE Test_ULINT
VAR
    a : ULINT := 25555423;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('TEST_ULINT');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_ULINT, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.ulintExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_USINT" Id="{ef948bb4-ae4e-47a7-b963-d71ce86c9997}">
      <Declaration><![CDATA[METHOD PRIVATE Test_USINT
VAR
    a : USINT := 255;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_USINT');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_USINT, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.usintExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_WORD" Id="{3859891c-ade4-48ca-89f8-da9a77a2ccbb}">
      <Declaration><![CDATA[METHOD PRIVATE Test_WORD
VAR
    a : WORD := 16#ABCD;
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_WORD');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_WORD, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.wordExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_WSTRING" Id="{cd24edfa-28c7-4bf7-ad9e-262f073a3ddf}">
      <Declaration><![CDATA[METHOD PRIVATE Test_WSTRING
VAR
    a : WSTRING := "åäöĦ";
    Result : U_ExpectedOrActual;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('Test_WSTRING');

Result := TcUnit.F_AnyToUnionValue(AnySize := SIZEOF(a), AnyTypeClass := IBaseLibrary.TYPE_WSTRING, AnyValue := ADR(a));

AssertEquals(Expected := a,
             Actual := result.wstringExpectedOrActual,
             Message := 'Values differ');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>