<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="TEST" Id="{8dd61791-c583-4b5e-b392-3e0ecf487849}" SpecialFunc="None">
    <Declaration><![CDATA[// This function declares a new test (if it has not been already declared in an earlier cycle)
FUNCTION TEST
VAR_INPUT
    TestName : T_MaxString;
END_VAR
VAR
    CounterTestSuiteAddress : UINT;
    Test : REFERENCE TO FB_Test;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[TestName := F_LTrim(in := F_RTrim(in := TestName));

// Mark this test as the current one being executed
GVL_TcUnit.CurrentTestNameBeingCalled := TestName;

(* Check if combination of address for the test suite and test name already exists.
   For every test suite the name of the test case needs to be unique.
   If a test with this name already exists, don't add it to the available tests.
   Otherwise, add it to the available tests *)

FOR CounterTestSuiteAddress := 1 TO GVL_TcUnit.NumberOfInitializedTestSuites BY 1 DO
    // Look for the test suite by comparing to the one that is currently running
    IF GVL_TcUnit.TestSuiteAddresses[CounterTestSuiteAddress] = GVL_TcUnit.CurrentTestSuiteBeingCalled THEN
        Test REF= GVL_TcUnit.TestSuiteAddresses[CounterTestSuiteAddress]^.AddTest(TestName := TestName, IsTestOrdered := FALSE);
        GVL_TcUnit.CurrentTestIsFinished := GVL_TcUnit.TestSuiteAddresses[CounterTestSuiteAddress]^.IsTestFinished(TestName := TestName);
        IF __ISVALIDREF(Test) THEN
			Test.SetStartedAtIfNotSet(Timestamp := F_GetCpuCounterAs64bit(GVL_TcUnit.GetCpuCounter));
        END_IF
        RETURN;
    END_IF
END_FOR]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>