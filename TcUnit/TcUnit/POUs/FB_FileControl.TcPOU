<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_FileControl" Id="{c9bec8fc-2de3-45f4-b839-e6c4276a6b5a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_FileControl
VAR
    FileAccessMode : SysFile.ACCESS_MODE := SysFile.AM_WRITE_PLUS;
    FileHandle : SysFile.SysTypes.RTS_IEC_HANDLE;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Close" Id="{519e9011-283c-40b1-afd4-31686c5b81fe}">
      <Declaration><![CDATA[(*
    Closes the current file
*)
METHOD PUBLIC Close : SysFile.SysTypes.RTS_IEC_RESULT;]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF FileHandle <> SysFile.SysTypes.RTS_INVALID_HANDLE THEN
    Close := SysFile.SysFileClose(hFile := FileHandle);
ELSE
    Close := sysdir.cmperrors.Errors.ERR_INVALID_HANDLE;                  
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Delete" Id="{e27996e3-6698-47c5-be0e-65fca18115ae}">
      <Declaration><![CDATA[(*
    Deletes a file specified by name, if it excists.
*)
METHOD PUBLIC Delete  : SysFile.SysTypes.RTS_IEC_RESULT;
VAR_INPUT
    (* File name can contain an absolute or relative path to the file. Path entries must be separated with a Slash (/) *)
    FileName : T_MaxString := 'filepath/output.xml'; 
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Delete := SysFile.SysFileDelete(szFileName := FileName);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Open" Id="{1873bb2c-c6a3-4681-8948-02aa2bad0a9b}">
      <Declaration><![CDATA[(*
    Opens a file
*)
METHOD PUBLIC Open : SysFile.SysTypes.RTS_IEC_RESULT;
VAR_INPUT
    FileName : T_MaxString; // File name can contain an absolute or relative path to the file. Path entries must be separated with a Slash (/)
    FileAccessMode : SysFile.ACCESS_MODE := SysFile.ACCESS_MODE.AM_APPEND_PLUS;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FileHandle := SysFile.SysFileOpen(szFile := Filename,
                                  am := FileAccessMode,
                                  pResult := ADR(Open));]]></ST>
      </Implementation>
    </Method>
    <Method Name="Read" Id="{3984ae50-1cdb-4045-af99-0bb56917afb2}">
      <Declaration><![CDATA[(*
    Reads a file from disk into the buffer
*)
METHOD Read : SysFile.SysTypes.RTS_IEC_RESULT;
VAR_INPUT
    pString : POINTER TO BYTE; // Call with ADR();
    Size : UDINT; // Call with SIZEOF(); 
END_VAR
VAR_OUTPUT
    FileSize : SysFile.SysTypes.RTS_IEC_SIZE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF FileHandle <> SysFile.SysTypes.RTS_INVALID_HANDLE THEN
    FileSize := SysFile.SysFileread(hFile := FileHandle, 
                                    pbyBuffer := pString,
                                    ulSize := Size,
                                    pResult := ADR(Read));
ELSE
    Read := sysdir.cmperrors.Errors.ERR_INVALID_HANDLE;                  
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Write" Id="{c4146a99-50c6-4ce0-88ab-794dbfb1af62}">
      <Declaration><![CDATA[(* 
    Writes the contents of the buffer into a file.
    Make sure to call Open() before calling Save() !
*)
METHOD Write : SysFile.SysTypes.RTS_IEC_RESULT;
VAR_INPUT
    pString : POINTER TO BYTE; // Call with ADR();
    Size : UDINT; // Call with SIZEOF();
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF FileHandle <> SysFile.SysTypes.RTS_INVALID_HANDLE THEN
    SysFile.SysFileWrite(hFile := FileHandle,
                         pbyBuffer := pString,
                         ulSize := Size,
                         pResult := ADR(Write));
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>